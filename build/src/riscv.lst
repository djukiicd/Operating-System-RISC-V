GAS LISTING /tmp/ccbI1DE7.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB21:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by marko on 20.4.22..
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** 
   5:src/riscv.cpp **** #include "../h/riscv.hpp"
   6:src/riscv.cpp **** #include "../lib/console.h"
   7:src/riscv.cpp **** #include "../h/print.hpp"
   8:src/riscv.cpp **** #include "../lib/mem.h"
   9:src/riscv.cpp **** #include "../h/kThread.hpp"
  10:src/riscv.cpp **** 
  11:src/riscv.cpp **** using Body = void (*)(void *);
  12:src/riscv.cpp **** 
  13:src/riscv.cpp **** void Riscv::popSppSpie()
  14:src/riscv.cpp **** {
  12              		.loc 1 14 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  15:src/riscv.cpp ****     __asm__ volatile ("csrw sepc, ra"); // sepc <=ra
  20              		.loc 1 15 5
  21              		.loc 1 15 39 is_stmt 0
  22              	#APP
  23              	# 15 "src/riscv.cpp" 1
  16              	    __asm__ volatile ("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 16 5 is_stmt 1
  27              		.loc 1 16 30 is_stmt 0
  28              	# 16 "src/riscv.cpp" 1
  17              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 17 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE21:
  42              		.section	.rodata.str1.8,"aMS",@progbits,1
GAS LISTING /tmp/ccbI1DE7.s 			page 2


  43              		.align	3
  44              	.LC0:
  45 0000 496C6567 		.string	"Ilegalna instrukcija\n:"
  45      616C6E61 
  45      20696E73 
  45      7472756B 
  45      63696A61 
  46 0017 00       		.align	3
  47              	.LC1:
  48 0018 4E65646F 		.string	"Nedozvolena adresa citanja\n"
  48      7A766F6C 
  48      656E6120 
  48      61647265 
  48      73612063 
  49 0034 00000000 		.align	3
  50              	.LC2:
  51 0038 4E65646F 		.string	"Nedozvolena adresa upisa\n"
  51      7A766F6C 
  51      656E6120 
  51      61647265 
  51      73612075 
  52 0052 00000000 		.align	3
  52      0000
  53              	.LC3:
  54 0058 73636175 		.string	"scause: "
  54      73653A20 
  54      00
  55 0061 00000000 		.align	3
  55      000000
  56              	.LC4:
  57 0068 0A00     		.string	"\n"
  58 006a 00000000 		.align	3
  58      0000
  59              	.LC5:
  60 0070 73657063 		.string	"sepc: "
  60      3A2000
  61 0077 00       		.align	3
  62              	.LC6:
  63 0078 73747661 		.string	"stval: "
  63      6C3A2000 
  64              		.text
  65              		.align	2
  66              		.globl	_ZN5Riscv13handleSyscallEv
  68              	_ZN5Riscv13handleSyscallEv:
  69              	.LFB22:
  18:src/riscv.cpp **** 
  19:src/riscv.cpp **** void Riscv::handleSyscall() {
  70              		.loc 1 19 29 is_stmt 1
  71              		.cfi_startproc
  72 0020 130101FA 		addi	sp,sp,-96
  73              		.cfi_def_cfa_offset 96
  74 0024 233C1104 		sd	ra,88(sp)
  75 0028 23388104 		sd	s0,80(sp)
  76 002c 23349104 		sd	s1,72(sp)
  77              		.cfi_offset 1, -8
  78              		.cfi_offset 8, -16
  79              		.cfi_offset 9, -24
GAS LISTING /tmp/ccbI1DE7.s 			page 3


  80 0030 13040106 		addi	s0,sp,96
  81              		.cfi_def_cfa 8, 0
  20:src/riscv.cpp **** 
  21:src/riscv.cpp ****     //uzimam parametre
  22:src/riscv.cpp ****     uint64 a0, a1, a2, a3, a4;
  82              		.loc 1 22 5
  23:src/riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r"(a0));
  83              		.loc 1 23 5
  84              		.loc 1 23 45 is_stmt 0
  85              	#APP
  86              	# 23 "src/riscv.cpp" 1
  24              	    __asm__ volatile("mv %0, a1" : "=r"(a1));
  87              		mv a5, a0
  88              	# 0 "" 2
  89              	.LVL0:
  90              		.loc 1 24 5 is_stmt 1
  91              		.loc 1 24 45 is_stmt 0
  92              	# 24 "src/riscv.cpp" 1
  25              	    __asm__ volatile("mv %0, a2" : "=r"(a2));
  93              		mv a5, a1
  94              	# 0 "" 2
  95              	.LVL1:
  96              		.loc 1 25 5 is_stmt 1
  97              		.loc 1 25 45 is_stmt 0
  98              	# 25 "src/riscv.cpp" 1
  26              	    __asm__ volatile("mv %0, a4" : "=r"(a3));
  99              		mv a5, a2
 100              	# 0 "" 2
 101              	.LVL2:
 102              		.loc 1 26 5 is_stmt 1
 103              		.loc 1 26 45 is_stmt 0
 104              	# 26 "src/riscv.cpp" 1
  27              	    __asm__ volatile("mv %0, a4" : "=r"(a4));
 105              		mv a5, a4
 106              	# 0 "" 2
 107              	.LVL3:
 108              		.loc 1 27 5 is_stmt 1
 109              		.loc 1 27 45 is_stmt 0
 110              	# 27 "src/riscv.cpp" 1
  28              	
 111              		mv a5, a4
 112              	# 0 "" 2
 113              	.LVL4:
  29:src/riscv.cpp ****     uint64  scause = r_scause();
 114              		.loc 1 29 5 is_stmt 1
 115              	#NO_APP
 116              	.LBB30:
 117              	.LBB31:
 118              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS_PROJECT_BASE_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS_PROJECT_BASE_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
GAS LISTING /tmp/ccbI1DE7.s 			page 4


   9:src/../h/riscv.hpp **** //inline fje - bitno: nece se generisati masinski kod za poziv fje na mestu koriscenja u cpp kodu
  10:src/../h/riscv.hpp **** //ako imamo poziv u ra reg ce biti upisana adresa na koju prog treba da se vrati (sa inline nema to
  11:src/../h/riscv.hpp **** class Riscv
  12:src/../h/riscv.hpp **** {
  13:src/../h/riscv.hpp **** public:
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/riscv.hpp ****     static void popSppSpie();
  17:src/../h/riscv.hpp **** 
  18:src/../h/riscv.hpp ****     // push x3..x31 registers onto stack
  19:src/../h/riscv.hpp ****     static void pushRegisters();
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     // pop x3..x31 registers onto stack
  22:src/../h/riscv.hpp ****     static void popRegisters();
  23:src/../h/riscv.hpp ****     //supervisor trap
  24:src/../h/riscv.hpp ****     static void supervisorTrap();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // read register scause
  28:src/../h/riscv.hpp ****     static uint64 r_scause();
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // write register scause
  31:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // read register sepc
  34:src/../h/riscv.hpp ****     static uint64 r_sepc();
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // write register sepc
  37:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     // read register stvec
  40:src/../h/riscv.hpp ****     static uint64 r_stvec();
  41:src/../h/riscv.hpp **** 
  42:src/../h/riscv.hpp ****     // write register stvec
  43:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // read register stval
  46:src/../h/riscv.hpp ****     static uint64 r_stval();
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // write register stval
  49:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     enum BitMaskSip
  52:src/../h/riscv.hpp ****     {
  53:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  54:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  55:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  56:src/../h/riscv.hpp ****     };
  57:src/../h/riscv.hpp **** 
  58:src/../h/riscv.hpp ****     // mask set register sip
  59:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  60:src/../h/riscv.hpp **** 
  61:src/../h/riscv.hpp ****     // mask clear register sip
  62:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     // read register sip
  65:src/../h/riscv.hpp ****     static uint64 r_sip();
GAS LISTING /tmp/ccbI1DE7.s 			page 5


  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // write register sip
  68:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     enum BitMaskSstatus
  71:src/../h/riscv.hpp ****     {
  72:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  73:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  74:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  75:src/../h/riscv.hpp ****     };
  76:src/../h/riscv.hpp **** 
  77:src/../h/riscv.hpp ****     // mask set register sstatus
  78:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp ****     // mask clear register sstatus
  81:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp ****     // read register sstatus
  84:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp ****     // write register sstatus
  87:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** private:
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp ****     //handle za sistemske pzoive
  92:src/../h/riscv.hpp ****     static void handleSyscall();
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp ****     //handle za prekide od tajmera
  95:src/../h/riscv.hpp ****     static void handleTimerInterrupt();
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp ****     //handle za prekide od konzozle
  98:src/../h/riscv.hpp ****     static void handleConsoleInterrupt();
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp ****     //handle za bad cause
 101:src/../h/riscv.hpp ****     static void handleBadCause();
 102:src/../h/riscv.hpp **** };
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 105:src/../h/riscv.hpp **** {
 106:src/../h/riscv.hpp ****     uint64 volatile scause;
 119              		.loc 2 106 5
 107:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 120              		.loc 2 107 5
 121              		.loc 2 107 72 is_stmt 0
 122              	#APP
 123              	# 107 "src/../h/riscv.hpp" 1
 108              	    return scause;
 124              		csrr a5, scause
 125              	# 0 "" 2
 126              	#NO_APP
 127 004c 233CF4FA 		sd	a5,-72(s0)
 128              		.loc 2 108 5 is_stmt 1
 129              		.loc 2 108 12 is_stmt 0
 130 0050 833484FB 		ld	s1,-72(s0)
 131              	.LVL5:
 132              	.LBE31:
GAS LISTING /tmp/ccbI1DE7.s 			page 6


 133              	.LBE30:
  30:src/riscv.cpp **** 
  31:src/riscv.cpp ****     //ecall iz korisnickog, ecall iz sistemskog rezima
  32:src/riscv.cpp ****     if(scause == 0x0000000000000008UL || scause == 0x0000000000000009UL)//syscall
 134              		.loc 1 32 5 is_stmt 1
 135              	.LBB32:
 136              		.loc 1 32 39 is_stmt 0
 137 0054 138784FF 		addi	a4,s1,-8
 138              		.loc 1 32 5
 139 0058 93071000 		li	a5,1
 140 005c 63F2E70C 		bleu	a4,a5,.L16
  33:src/riscv.cpp ****     {
  34:src/riscv.cpp **** 
  35:src/riscv.cpp ****         uint64 volatile sepc = r_sepc()+ 4; // jer pc pokazuje na trenutnu instrukciju tj ecall, a 
  36:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus(); // kupim vrednost statusnog registra
  37:src/riscv.cpp ****         //obe stvari su mi bitne zbog desavanja kada se dodje na sret
  38:src/riscv.cpp **** 
  39:src/riscv.cpp ****         uint64  syscall;
  40:src/riscv.cpp ****         __asm__ volatile("mv %0, a0" : "=r"(syscall));
  41:src/riscv.cpp **** 
  42:src/riscv.cpp ****         size_t  size;
  43:src/riscv.cpp ****         void* ptr = nullptr;
  44:src/riscv.cpp ****         int ret;
  45:src/riscv.cpp **** //        Body body;
  46:src/riscv.cpp **** //        void* arg;
  47:src/riscv.cpp **** //        void* stack_space;
  48:src/riscv.cpp **** //        PCB** handleCreate;
  49:src/riscv.cpp **** //        thread_t handle;
  50:src/riscv.cpp **** //        struct kSemaphore* sem;
  51:src/riscv.cpp **** //          char character= 'A';
  52:src/riscv.cpp **** 
  53:src/riscv.cpp ****         switch(syscall)
  54:src/riscv.cpp ****         {
  55:src/riscv.cpp ****             case 0x01: //mem_alloc
  56:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1":"=r"(size));
  57:src/riscv.cpp ****                 size *= MEM_BLOCK_SIZE;
  58:src/riscv.cpp ****                 //ptr = MemoryAllocator::kmem_alloc(size);
  59:src/riscv.cpp ****                 ptr = __mem_alloc(size);
  60:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (ptr));
  61:src/riscv.cpp ****                 break;
  62:src/riscv.cpp ****             case 0x02: //mem_free
  63:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1": "=r"(ptr));
  64:src/riscv.cpp ****                 //ret = MemoryAllocator::kmem_free(ptr);
  65:src/riscv.cpp ****                 ret = __mem_free(ptr);
  66:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(ret));
  67:src/riscv.cpp ****                 break;
  68:src/riscv.cpp ****             case 0x11://thread_create
  69:src/riscv.cpp **** //                kThread* handle;
  70:src/riscv.cpp **** //                Body body;
  71:src/riscv.cpp **** //                void * arg;
  72:src/riscv.cpp **** //                void * stack_space;
  73:src/riscv.cpp **** //                __asm__ volatile("mv %0, a1":"=r"(handle));
  74:src/riscv.cpp **** //                __asm__ volatile("mv %0, a2":"=r"(body));
  75:src/riscv.cpp **** //                __asm__ volatile("mv %0, a3":"=r"(arg));
  76:src/riscv.cpp **** //                if(body!= nullptr){
  77:src/riscv.cpp **** //                    __asm__ volatile("mv %0, a4":"=r"(stack_space));
  78:src/riscv.cpp **** //                }
GAS LISTING /tmp/ccbI1DE7.s 			page 7


  79:src/riscv.cpp **** //                else stack_space = nullptr;
  80:src/riscv.cpp **** //
  81:src/riscv.cpp **** //                handle = kThread::createProcess(body,arg,stack_space);
  82:src/riscv.cpp **** //
  83:src/riscv.cpp **** //                if(handle) ret = 0;
  84:src/riscv.cpp **** //                else ret = -0x11;
  85:src/riscv.cpp **** //                __asm__ volatile("mv a0, %0"::"r"(ret));
  86:src/riscv.cpp **** //                break;
  87:src/riscv.cpp **** //            case 0x12://thread_exit
  88:src/riscv.cpp **** //                if(kThread::running->body == nullptr){
  89:src/riscv.cpp **** //                    ret = -0x12;
  90:src/riscv.cpp **** //                    __asm__ volatile("mv a0, %0"::"r"(ret));
  91:src/riscv.cpp **** //                }
  92:src/riscv.cpp **** //                else kThread::kThreadExit();
  93:src/riscv.cpp **** //                break;
  94:src/riscv.cpp ****             case 0x13: //thread_dispatch
  95:src/riscv.cpp ****                 kThread::yield();
  96:src/riscv.cpp ****                 break;
  97:src/riscv.cpp **** //            case 0x14: //thread_join
  98:src/riscv.cpp **** //                __asm__ volatile("mv %0, a1":"=r"(handle));
  99:src/riscv.cpp **** //                PCB::join(handle);
 100:src/riscv.cpp **** //                break;
 101:src/riscv.cpp **** //            case 0x21: //sem_open
 102:src/riscv.cpp **** //                struct kSemaphore** handle;
 103:src/riscv.cpp **** //                int  init;
 104:src/riscv.cpp **** //                __asm__ volatile("mv %0, a1":"=r"(handle));
 105:src/riscv.cpp **** //                __asm__ volatile("mv %0, a2":"=r"(init));
 106:src/riscv.cpp **** //                *handle = kSemaphore::ksem_open(init);
 107:src/riscv.cpp **** //                if(*handle == nullptr) {
 108:src/riscv.cpp **** //                    ret = -21;
 109:src/riscv.cpp **** //                } else {
 110:src/riscv.cpp **** //                    ret=0;
 111:src/riscv.cpp **** //                }
 112:src/riscv.cpp **** //                __asm__ volatile("mv a0, %0"::"r"(ret));
 113:src/riscv.cpp **** //                break;
 114:src/riscv.cpp **** //            case 0x22://sem_close
 115:src/riscv.cpp **** //                __asm__ volatile("mv %0, a1":"=r"(sem));
 116:src/riscv.cpp **** //                if(sem == nullptr) {
 117:src/riscv.cpp **** //                    ret = -22;
 118:src/riscv.cpp **** //                    __asm__ volatile("mv a0, %0"::"r"(ret));
 119:src/riscv.cpp **** //                    return;
 120:src/riscv.cpp **** //                } else ret = 0;
 121:src/riscv.cpp **** //                kSemaphore::ksem_close(sem);
 122:src/riscv.cpp **** //                __asm__ volatile("mv a0, %0"::"r"(ret));
 123:src/riscv.cpp **** //                break;
 124:src/riscv.cpp **** //            case 0x23: //sem_wait
 125:src/riscv.cpp **** //                __asm__ volatile("mv %0, a1":"=r"(sem));
 126:src/riscv.cpp **** //                if(sem == nullptr) {
 127:src/riscv.cpp **** //                    ret = -23;
 128:src/riscv.cpp **** //                    __asm__ volatile("mv a0, %0"::"r"(ret));
 129:src/riscv.cpp **** //                } else ret =0;
 130:src/riscv.cpp **** //                kSemaphore::ksem_wait(sem);
 131:src/riscv.cpp **** //                __asm__ volatile("mv a0, %0"::"r"(ret));
 132:src/riscv.cpp **** //                break;
 133:src/riscv.cpp **** //            case 0x24: //sem_signal
 134:src/riscv.cpp **** //                __asm__ volatile("mv %0, a1":"=r"(sem));
 135:src/riscv.cpp **** //                if(sem == nullptr) {
GAS LISTING /tmp/ccbI1DE7.s 			page 8


 136:src/riscv.cpp **** //                    ret = -24;
 137:src/riscv.cpp **** //                    __asm__ volatile("mv a0, %0"::"r"(ret));
 138:src/riscv.cpp **** //                    return;
 139:src/riscv.cpp **** //                } else ret=0;
 140:src/riscv.cpp **** //                kSemaphore::ksem_signal(sem);
 141:src/riscv.cpp **** //                __asm__ volatile("mv a0, %0"::"r"(ret));
 142:src/riscv.cpp **** //                break;
 143:src/riscv.cpp **** //            case 0x41: //getc
 144:src/riscv.cpp **** //                character = __getc(); //odlazim u timer interrupt umesto u console interrupt
 145:src/riscv.cpp **** //                __asm__ volatile("mv a0, %0"::"r"(character));
 146:src/riscv.cpp **** //                break;
 147:src/riscv.cpp **** //            case 0x42: //putc
 148:src/riscv.cpp **** //                char c;
 149:src/riscv.cpp **** //                __asm__ volatile("mv %0, a1":"=r"(c));
 150:src/riscv.cpp **** //                __putc(c);
 151:src/riscv.cpp **** //                break;
 152:src/riscv.cpp ****             case 0x55:
 153:src/riscv.cpp ****                 int args;
 154:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1":"=r"(args));
 155:src/riscv.cpp ****                 args += 6;
 156:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(args));
 157:src/riscv.cpp ****                 break;
 158:src/riscv.cpp ****             default: break;
 159:src/riscv.cpp ****         }
 160:src/riscv.cpp **** 
 161:src/riscv.cpp ****         __asm__ volatile("sd a0, 80(fp)"); //resava mi problem sa a0 (skontaj sta si tu radila)
 162:src/riscv.cpp ****         //PCB::dispatch();
 163:src/riscv.cpp ****         w_sstatus(sstatus);
 164:src/riscv.cpp ****         w_sepc(sepc);
 165:src/riscv.cpp **** 
 166:src/riscv.cpp ****     }
 167:src/riscv.cpp ****     else
 168:src/riscv.cpp **** 
 169:src/riscv.cpp ****     {
 170:src/riscv.cpp ****         if(scause == 0x0000000000000002UL)
 141              		.loc 1 170 9 is_stmt 1
 142 0060 93072000 		li	a5,2
 143 0064 6386F416 		beq	s1,a5,.L17
 171:src/riscv.cpp ****             printString("Ilegalna instrukcija\n:");
 172:src/riscv.cpp ****         else if (scause == 0x0000000000000005UL)
 144              		.loc 1 172 14
 145 0068 93075000 		li	a5,5
 146 006c 638CF416 		beq	s1,a5,.L18
 173:src/riscv.cpp ****             printString("Nedozvolena adresa citanja\n");
 174:src/riscv.cpp ****         else if (scause == 0x0000000000000007UL)
 147              		.loc 1 174 14
 148 0070 93077000 		li	a5,7
 149 0074 6382F418 		beq	s1,a5,.L19
 150              	.L13:
 175:src/riscv.cpp ****             printString("Nedozvolena adresa upisa\n");
 176:src/riscv.cpp **** 
 177:src/riscv.cpp **** 
 178:src/riscv.cpp ****         printString("scause: ");
 151              		.loc 1 178 9
 152              		.loc 1 178 20 is_stmt 0
 153 0078 17050000 		lla	a0,.LC3
 153      13050500 
GAS LISTING /tmp/ccbI1DE7.s 			page 9


 154 0080 97000000 		call	_Z11printStringPKc@plt
 154      E7800000 
 155              	.LVL6:
 179:src/riscv.cpp ****         printInteger(scause);
 156              		.loc 1 179 9 is_stmt 1
 157              		.loc 1 179 21 is_stmt 0
 158 0088 13850400 		mv	a0,s1
 159 008c 97000000 		call	_Z12printIntegerm@plt
 159      E7800000 
 160              	.LVL7:
 180:src/riscv.cpp ****         printString("\n");
 161              		.loc 1 180 9 is_stmt 1
 162              		.loc 1 180 20 is_stmt 0
 163 0094 17050000 		lla	a0,.LC4
 163      13050500 
 164 009c 97000000 		call	_Z11printStringPKc@plt
 164      E7800000 
 165              	.LVL8:
 181:src/riscv.cpp ****         printString("sepc: ");
 166              		.loc 1 181 9 is_stmt 1
 167              		.loc 1 181 20 is_stmt 0
 168 00a4 17050000 		lla	a0,.LC5
 168      13050500 
 169 00ac 97000000 		call	_Z11printStringPKc@plt
 169      E7800000 
 170              	.LVL9:
 182:src/riscv.cpp ****         printInteger(r_sepc());
 171              		.loc 1 182 9 is_stmt 1
 172              	.LBB33:
 173              	.LBB34:
 109:src/../h/riscv.hpp **** }
 110:src/../h/riscv.hpp **** 
 111:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 112:src/../h/riscv.hpp **** {
 113:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 114:src/../h/riscv.hpp **** }
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 117:src/../h/riscv.hpp **** {
 118:src/../h/riscv.hpp ****     uint64 volatile sepc;
 174              		.loc 2 118 5
 119:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 175              		.loc 2 119 5
 176              		.loc 2 119 64 is_stmt 0
 177              	#APP
 178              	# 119 "src/../h/riscv.hpp" 1
 120              	    return sepc;
 179              		csrr a5, sepc
 180              	# 0 "" 2
 181              	#NO_APP
 182 00b8 233CF4FC 		sd	a5,-40(s0)
 183              		.loc 2 120 5 is_stmt 1
 184              		.loc 2 120 12 is_stmt 0
 185 00bc 033584FD 		ld	a0,-40(s0)
 186              	.LBE34:
 187              	.LBE33:
 188              		.loc 1 182 21
GAS LISTING /tmp/ccbI1DE7.s 			page 10


 189 00c0 97000000 		call	_Z12printIntegerm@plt
 189      E7800000 
 190              	.LVL10:
 183:src/riscv.cpp ****         printString("\n");
 191              		.loc 1 183 9 is_stmt 1
 192              		.loc 1 183 20 is_stmt 0
 193 00c8 17050000 		lla	a0,.LC4
 193      13050500 
 194 00d0 97000000 		call	_Z11printStringPKc@plt
 194      E7800000 
 195              	.LVL11:
 184:src/riscv.cpp ****         printString("stval: ");
 196              		.loc 1 184 9 is_stmt 1
 197              		.loc 1 184 20 is_stmt 0
 198 00d8 17050000 		lla	a0,.LC6
 198      13050500 
 199 00e0 97000000 		call	_Z11printStringPKc@plt
 199      E7800000 
 200              	.LVL12:
 185:src/riscv.cpp ****         printInteger(r_stval());
 201              		.loc 1 185 9 is_stmt 1
 202              	.LBB35:
 203              	.LBB36:
 121:src/../h/riscv.hpp **** }
 122:src/../h/riscv.hpp **** 
 123:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 124:src/../h/riscv.hpp **** {
 125:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 126:src/../h/riscv.hpp **** }
 127:src/../h/riscv.hpp **** 
 128:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 129:src/../h/riscv.hpp **** {
 130:src/../h/riscv.hpp ****     uint64 volatile stvec;
 131:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 132:src/../h/riscv.hpp ****     return stvec;
 133:src/../h/riscv.hpp **** }
 134:src/../h/riscv.hpp **** 
 135:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 136:src/../h/riscv.hpp **** {
 137:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 138:src/../h/riscv.hpp **** }
 139:src/../h/riscv.hpp **** 
 140:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 141:src/../h/riscv.hpp **** {
 142:src/../h/riscv.hpp ****     uint64 volatile stval;
 204              		.loc 2 142 5
 143:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 205              		.loc 2 143 5
 206              		.loc 2 143 68 is_stmt 0
 207              	#APP
 208              	# 143 "src/../h/riscv.hpp" 1
 144              	    return stval;
 209              		csrr a5, stval
 210              	# 0 "" 2
 211              	#NO_APP
 212 00ec 2338F4FC 		sd	a5,-48(s0)
 213              		.loc 2 144 5 is_stmt 1
GAS LISTING /tmp/ccbI1DE7.s 			page 11


 214              		.loc 2 144 12 is_stmt 0
 215 00f0 033504FD 		ld	a0,-48(s0)
 216              	.LBE36:
 217              	.LBE35:
 218              		.loc 1 185 21
 219 00f4 97000000 		call	_Z12printIntegerm@plt
 219      E7800000 
 220              	.LVL13:
 186:src/riscv.cpp ****         printString("\n");
 221              		.loc 1 186 9 is_stmt 1
 222              		.loc 1 186 20 is_stmt 0
 223 00fc 17050000 		lla	a0,.LC4
 223      13050500 
 224 0104 97000000 		call	_Z11printStringPKc@plt
 224      E7800000 
 225              	.LVL14:
 226              	.L3:
 227              	.LBE32:
 187:src/riscv.cpp ****         //while(1);
 188:src/riscv.cpp ****     }
 189:src/riscv.cpp **** }
 228              		.loc 1 189 1
 229 010c 83308105 		ld	ra,88(sp)
 230              		.cfi_remember_state
 231              		.cfi_restore 1
 232 0110 03340105 		ld	s0,80(sp)
 233              		.cfi_restore 8
 234              		.cfi_def_cfa 2, 96
 235 0114 83348104 		ld	s1,72(sp)
 236              		.cfi_restore 9
 237              	.LVL15:
 238 0118 13010106 		addi	sp,sp,96
 239              		.cfi_def_cfa_offset 0
 240 011c 67800000 		jr	ra
 241              	.LVL16:
 242              	.L16:
 243              		.cfi_restore_state
 244              	.LBB51:
 245              	.LBB37:
  35:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus(); // kupim vrednost statusnog registra
 246              		.loc 1 35 9 is_stmt 1
 247              	.LBB38:
 248              	.LBB39:
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 249              		.loc 2 118 5
 119:src/../h/riscv.hpp ****     return sepc;
 250              		.loc 2 119 5
 119:src/../h/riscv.hpp ****     return sepc;
 251              		.loc 2 119 64 is_stmt 0
 252              	#APP
 253              	# 119 "src/../h/riscv.hpp" 1
 254              		csrr a5, sepc
 255              	# 0 "" 2
 256              	#NO_APP
 257 0124 2334F4FC 		sd	a5,-56(s0)
 120:src/../h/riscv.hpp **** }
 258              		.loc 2 120 5 is_stmt 1
GAS LISTING /tmp/ccbI1DE7.s 			page 12


 120:src/../h/riscv.hpp **** }
 259              		.loc 2 120 12 is_stmt 0
 260 0128 833784FC 		ld	a5,-56(s0)
 261              	.LBE39:
 262              	.LBE38:
  35:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus(); // kupim vrednost statusnog registra
 263              		.loc 1 35 40
 264 012c 93874700 		addi	a5,a5,4
  35:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus(); // kupim vrednost statusnog registra
 265              		.loc 1 35 42
 266 0130 2334F4FA 		sd	a5,-88(s0)
  36:src/riscv.cpp ****         //obe stvari su mi bitne zbog desavanja kada se dodje na sret
 267              		.loc 1 36 9 is_stmt 1
 268              	.LBB40:
 269              	.LBB41:
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 148:src/../h/riscv.hpp **** {
 149:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 150:src/../h/riscv.hpp **** }
 151:src/../h/riscv.hpp **** 
 152:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 153:src/../h/riscv.hpp **** {
 154:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 155:src/../h/riscv.hpp **** }
 156:src/../h/riscv.hpp **** 
 157:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 158:src/../h/riscv.hpp **** {
 159:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 160:src/../h/riscv.hpp **** }
 161:src/../h/riscv.hpp **** 
 162:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 163:src/../h/riscv.hpp **** {
 164:src/../h/riscv.hpp ****     uint64 volatile sip;
 165:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 166:src/../h/riscv.hpp ****     return sip;
 167:src/../h/riscv.hpp **** }
 168:src/../h/riscv.hpp **** 
 169:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 170:src/../h/riscv.hpp **** {
 171:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 172:src/../h/riscv.hpp **** }
 173:src/../h/riscv.hpp **** 
 174:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 175:src/../h/riscv.hpp **** {
 176:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 177:src/../h/riscv.hpp **** }
 178:src/../h/riscv.hpp **** 
 179:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 180:src/../h/riscv.hpp **** {
 181:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 182:src/../h/riscv.hpp **** }
 183:src/../h/riscv.hpp **** 
 184:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 185:src/../h/riscv.hpp **** {
 186:src/../h/riscv.hpp ****     uint64 volatile sstatus;
GAS LISTING /tmp/ccbI1DE7.s 			page 13


 270              		.loc 2 186 5
 187:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 271              		.loc 2 187 5
 272              		.loc 2 187 76 is_stmt 0
 273              	#APP
 274              	# 187 "src/../h/riscv.hpp" 1
 188              	    return sstatus;
 275              		csrr a5, sstatus
 276              	# 0 "" 2
 277              	#NO_APP
 278 0138 2330F4FC 		sd	a5,-64(s0)
 279              		.loc 2 188 5 is_stmt 1
 280              		.loc 2 188 12 is_stmt 0
 281 013c 833704FC 		ld	a5,-64(s0)
 282              	.LBE41:
 283              	.LBE40:
  36:src/riscv.cpp ****         //obe stvari su mi bitne zbog desavanja kada se dodje na sret
 284              		.loc 1 36 45
 285 0140 2338F4FA 		sd	a5,-80(s0)
  39:src/riscv.cpp ****         __asm__ volatile("mv %0, a0" : "=r"(syscall));
 286              		.loc 1 39 9 is_stmt 1
  40:src/riscv.cpp **** 
 287              		.loc 1 40 9
  40:src/riscv.cpp **** 
 288              		.loc 1 40 54 is_stmt 0
 289              	#APP
 290              	# 40 "src/riscv.cpp" 1
 291              		mv a5, a0
 292              	# 0 "" 2
 293              	.LVL17:
  42:src/riscv.cpp ****         void* ptr = nullptr;
 294              		.loc 1 42 9 is_stmt 1
  43:src/riscv.cpp ****         int ret;
 295              		.loc 1 43 9
  44:src/riscv.cpp **** //        Body body;
 296              		.loc 1 44 9
  53:src/riscv.cpp ****         {
 297              		.loc 1 53 9
 298              	#NO_APP
 299              	.LBB42:
 300 0148 13071001 		li	a4,17
 301 014c 638CE706 		beq	a5,a4,.L5
 302 0150 6364F702 		bgtu	a5,a4,.L6
 303 0154 13071000 		li	a4,1
 304 0158 6380E704 		beq	a5,a4,.L7
 305 015c 13072000 		li	a4,2
 306 0160 6396E704 		bne	a5,a4,.L9
 307              	.LBB43:
  62:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1": "=r"(ptr));
 308              		.loc 1 62 13
  63:src/riscv.cpp ****                 //ret = MemoryAllocator::kmem_free(ptr);
 309              		.loc 1 63 17
  63:src/riscv.cpp ****                 //ret = MemoryAllocator::kmem_free(ptr);
 310              		.loc 1 63 57 is_stmt 0
 311              	#APP
 312              	# 63 "src/riscv.cpp" 1
 313              		mv a0, a1
GAS LISTING /tmp/ccbI1DE7.s 			page 14


 314              	# 0 "" 2
 315              	.LVL18:
  65:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(ret));
 316              		.loc 1 65 17 is_stmt 1
  65:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(ret));
 317              		.loc 1 65 33 is_stmt 0
 318              	#NO_APP
 319 0168 97000000 		call	__mem_free@plt
 319      E7800000 
 320              	.LVL19:
  66:src/riscv.cpp ****                 break;
 321              		.loc 1 66 17 is_stmt 1
  66:src/riscv.cpp ****                 break;
 322              		.loc 1 66 56 is_stmt 0
 323              	#APP
 324              	# 66 "src/riscv.cpp" 1
  67:src/riscv.cpp ****             case 0x11://thread_create
 325              		mv a0, a0
 326              	# 0 "" 2
 327              		.loc 1 67 17 is_stmt 1
 328              	#NO_APP
 329 0174 6F008003 		j	.L9
 330              	.LVL20:
 331              	.L6:
 332              	.LBE43:
  53:src/riscv.cpp ****         {
 333              		.loc 1 53 9 is_stmt 0
 334 0178 13073001 		li	a4,19
 335 017c 6384E704 		beq	a5,a4,.L5
 336 0180 13075005 		li	a4,85
 337 0184 6394E702 		bne	a5,a4,.L9
 338              	.LBB44:
 152:src/riscv.cpp ****                 int args;
 339              		.loc 1 152 13 is_stmt 1
 153:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1":"=r"(args));
 340              		.loc 1 153 17
 154:src/riscv.cpp ****                 args += 6;
 341              		.loc 1 154 17
 154:src/riscv.cpp ****                 args += 6;
 342              		.loc 1 154 57 is_stmt 0
 343              	#APP
 344              	# 154 "src/riscv.cpp" 1
 345              		mv a5, a1
 346              	# 0 "" 2
 347              	.LVL21:
 155:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(args));
 348              		.loc 1 155 17 is_stmt 1
 155:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(args));
 349              		.loc 1 155 22 is_stmt 0
 350              	#NO_APP
 351 018c 9B876700 		addiw	a5,a5,6
 352              	.LVL22:
 156:src/riscv.cpp ****                 break;
 353              		.loc 1 156 17 is_stmt 1
 156:src/riscv.cpp ****                 break;
 354              		.loc 1 156 57 is_stmt 0
 355              	#APP
GAS LISTING /tmp/ccbI1DE7.s 			page 15


 356              	# 156 "src/riscv.cpp" 1
 157:src/riscv.cpp ****             default: break;
 357              		mv a0, a5
 358              	# 0 "" 2
 359              		.loc 1 157 17 is_stmt 1
 360              	#NO_APP
 361 0194 6F008001 		j	.L9
 362              	.LVL23:
 363              	.L7:
  55:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1":"=r"(size));
 364              		.loc 1 55 13
  56:src/riscv.cpp ****                 size *= MEM_BLOCK_SIZE;
 365              		.loc 1 56 17
  56:src/riscv.cpp ****                 size *= MEM_BLOCK_SIZE;
 366              		.loc 1 56 57 is_stmt 0
 367              	#APP
 368              	# 56 "src/riscv.cpp" 1
 369              		mv a0, a1
 370              	# 0 "" 2
 371              	.LVL24:
  57:src/riscv.cpp ****                 //ptr = MemoryAllocator::kmem_alloc(size);
 372              		.loc 1 57 17 is_stmt 1
  59:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (ptr));
 373              		.loc 1 59 17
  59:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (ptr));
 374              		.loc 1 59 34 is_stmt 0
 375              	#NO_APP
 376 019c 13156500 		slli	a0,a0,6
 377              	.LVL25:
 378 01a0 97000000 		call	__mem_alloc@plt
 378      E7800000 
 379              	.LVL26:
  60:src/riscv.cpp ****                 break;
 380              		.loc 1 60 17 is_stmt 1
  60:src/riscv.cpp ****                 break;
 381              		.loc 1 60 60 is_stmt 0
 382              	#APP
 383              	# 60 "src/riscv.cpp" 1
  61:src/riscv.cpp ****             case 0x02: //mem_free
 384              		mv a0, a0
 385              	# 0 "" 2
 386              		.loc 1 61 17 is_stmt 1
 387              	.LVL27:
 388              	#NO_APP
 389              	.L9:
 390              	.LBE44:
 391              	.LBE42:
 161:src/riscv.cpp ****         //PCB::dispatch();
 392              		.loc 1 161 9
 161:src/riscv.cpp ****         //PCB::dispatch();
 393              		.loc 1 161 42 is_stmt 0
 394              	#APP
 395              	# 161 "src/riscv.cpp" 1
 163:src/riscv.cpp ****         w_sepc(sepc);
 396              		sd a0, 80(fp)
 397              	# 0 "" 2
 398              		.loc 1 163 9 is_stmt 1
GAS LISTING /tmp/ccbI1DE7.s 			page 16


 163:src/riscv.cpp ****         w_sepc(sepc);
 399              		.loc 1 163 18 is_stmt 0
 400              	#NO_APP
 401 01b0 833704FB 		ld	a5,-80(s0)
 402              	.LVL28:
 403              	.LBB46:
 404              	.LBB47:
 189:src/../h/riscv.hpp **** }
 190:src/../h/riscv.hpp **** 
 191:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 192:src/../h/riscv.hpp **** {
 193:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 405              		.loc 2 193 5 is_stmt 1
 406              		.loc 2 193 77 is_stmt 0
 407              	#APP
 408              	# 193 "src/../h/riscv.hpp" 1
 194              	}
 409              		csrw sstatus, a5
 410              	# 0 "" 2
 411              	.LVL29:
 412              	#NO_APP
 413              	.LBE47:
 414              	.LBE46:
 164:src/riscv.cpp **** 
 415              		.loc 1 164 9 is_stmt 1
 164:src/riscv.cpp **** 
 416              		.loc 1 164 15 is_stmt 0
 417 01b8 833784FA 		ld	a5,-88(s0)
 418              	.LVL30:
 419              	.LBB48:
 420              	.LBB49:
 125:src/../h/riscv.hpp **** }
 421              		.loc 2 125 5 is_stmt 1
 125:src/../h/riscv.hpp **** }
 422              		.loc 2 125 65 is_stmt 0
 423              	#APP
 424              	# 125 "src/../h/riscv.hpp" 1
 126:src/../h/riscv.hpp **** 
 425              		csrw sepc, a5
 426              	# 0 "" 2
 427              		.loc 2 126 1
 428              	#NO_APP
 429 01c0 6FF0DFF4 		j	.L3
 430              	.LVL31:
 431              	.L5:
 432              	.LBE49:
 433              	.LBE48:
 434              	.LBB50:
 435              	.LBB45:
  68:src/riscv.cpp **** //                kThread* handle;
 436              		.loc 1 68 13 is_stmt 1
  94:src/riscv.cpp ****                 kThread::yield();
 437              		.loc 1 94 13
  95:src/riscv.cpp ****                 break;
 438              		.loc 1 95 17
  95:src/riscv.cpp ****                 break;
 439              		.loc 1 95 31 is_stmt 0
GAS LISTING /tmp/ccbI1DE7.s 			page 17


 440 01c4 97000000 		call	_ZN7kThread5yieldEv@plt
 440      E7800000 
 441              	.LVL32:
  96:src/riscv.cpp **** //            case 0x14: //thread_join
 442              		.loc 1 96 17 is_stmt 1
 443 01cc 6FF01FFE 		j	.L9
 444              	.LVL33:
 445              	.L17:
 446              	.LBE45:
 447              	.LBE50:
 448              	.LBE37:
 171:src/riscv.cpp ****         else if (scause == 0x0000000000000005UL)
 449              		.loc 1 171 13
 171:src/riscv.cpp ****         else if (scause == 0x0000000000000005UL)
 450              		.loc 1 171 24 is_stmt 0
 451 01d0 17050000 		lla	a0,.LC0
 451      13050500 
 452 01d8 97000000 		call	_Z11printStringPKc@plt
 452      E7800000 
 453              	.LVL34:
 454 01e0 6FF09FE9 		j	.L13
 455              	.L18:
 173:src/riscv.cpp ****         else if (scause == 0x0000000000000007UL)
 456              		.loc 1 173 13 is_stmt 1
 173:src/riscv.cpp ****         else if (scause == 0x0000000000000007UL)
 457              		.loc 1 173 24 is_stmt 0
 458 01e4 17050000 		lla	a0,.LC1
 458      13050500 
 459 01ec 97000000 		call	_Z11printStringPKc@plt
 459      E7800000 
 460              	.LVL35:
 461 01f4 6FF05FE8 		j	.L13
 462              	.L19:
 175:src/riscv.cpp **** 
 463              		.loc 1 175 13 is_stmt 1
 175:src/riscv.cpp **** 
 464              		.loc 1 175 24 is_stmt 0
 465 01f8 17050000 		lla	a0,.LC2
 465      13050500 
 466 0200 97000000 		call	_Z11printStringPKc@plt
 466      E7800000 
 467              	.LVL36:
 468 0208 6FF01FE7 		j	.L13
 469              	.LBE51:
 470              		.cfi_endproc
 471              	.LFE22:
 473              		.align	2
 474              		.globl	_ZN5Riscv20handleTimerInterruptEv
 476              	_ZN5Riscv20handleTimerInterruptEv:
 477              	.LFB23:
 190:src/riscv.cpp **** void Riscv::handleTimerInterrupt() {
 478              		.loc 1 190 36 is_stmt 1
 479              		.cfi_startproc
 480 020c 130101FD 		addi	sp,sp,-48
 481              		.cfi_def_cfa_offset 48
 482 0210 23348102 		sd	s0,40(sp)
 483              		.cfi_offset 8, -8
GAS LISTING /tmp/ccbI1DE7.s 			page 18


 484 0214 13040103 		addi	s0,sp,48
 485              		.cfi_def_cfa 8, 0
 191:src/riscv.cpp **** 
 192:src/riscv.cpp ****     mc_sip(SIP_SSIP); //zasto ovo?? - ni ne radim vrv
 486              		.loc 1 192 5
 487              	.LVL37:
 488              	.LBB52:
 489              	.LBB53:
 159:src/../h/riscv.hpp **** }
 490              		.loc 2 159 5
 159:src/../h/riscv.hpp **** }
 491              		.loc 2 159 64 is_stmt 0
 492 0218 93072000 		li	a5,2
 493              	#APP
 494              	# 159 "src/../h/riscv.hpp" 1
 495              		csrc sip, a5
 496              	# 0 "" 2
 497              	.LVL38:
 498              	#NO_APP
 499              	.LBE53:
 500              	.LBE52:
 193:src/riscv.cpp **** 
 194:src/riscv.cpp ****     uint64 volatile sepc = r_sepc();
 501              		.loc 1 194 5 is_stmt 1
 502              	.LBB54:
 503              	.LBB55:
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 504              		.loc 2 118 5
 119:src/../h/riscv.hpp ****     return sepc;
 505              		.loc 2 119 5
 119:src/../h/riscv.hpp ****     return sepc;
 506              		.loc 2 119 64 is_stmt 0
 507              	#APP
 508              	# 119 "src/../h/riscv.hpp" 1
 509              		csrr a5, sepc
 510              	# 0 "" 2
 511              	#NO_APP
 512 0224 233CF4FC 		sd	a5,-40(s0)
 120:src/../h/riscv.hpp **** }
 513              		.loc 2 120 5 is_stmt 1
 120:src/../h/riscv.hpp **** }
 514              		.loc 2 120 12 is_stmt 0
 515 0228 833784FD 		ld	a5,-40(s0)
 516              	.LBE55:
 517              	.LBE54:
 518              		.loc 1 194 35
 519 022c 2334F4FE 		sd	a5,-24(s0)
 195:src/riscv.cpp ****     uint64 volatile sstatus = r_sstatus();
 520              		.loc 1 195 5 is_stmt 1
 521              	.LBB56:
 522              	.LBB57:
 186:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 523              		.loc 2 186 5
 187:src/../h/riscv.hpp ****     return sstatus;
 524              		.loc 2 187 5
 187:src/../h/riscv.hpp ****     return sstatus;
 525              		.loc 2 187 76 is_stmt 0
GAS LISTING /tmp/ccbI1DE7.s 			page 19


 526              	#APP
 527              	# 187 "src/../h/riscv.hpp" 1
 528              		csrr a5, sstatus
 529              	# 0 "" 2
 530              	#NO_APP
 531 0234 2338F4FC 		sd	a5,-48(s0)
 188:src/../h/riscv.hpp **** }
 532              		.loc 2 188 5 is_stmt 1
 188:src/../h/riscv.hpp **** }
 533              		.loc 2 188 12 is_stmt 0
 534 0238 833704FD 		ld	a5,-48(s0)
 535              	.LBE57:
 536              	.LBE56:
 537              		.loc 1 195 41
 538 023c 2330F4FE 		sd	a5,-32(s0)
 196:src/riscv.cpp ****     w_sstatus(sstatus);
 539              		.loc 1 196 5 is_stmt 1
 540              		.loc 1 196 14 is_stmt 0
 541 0240 833704FE 		ld	a5,-32(s0)
 542              	.LVL39:
 543              	.LBB58:
 544              	.LBB59:
 193:src/../h/riscv.hpp **** }
 545              		.loc 2 193 5 is_stmt 1
 193:src/../h/riscv.hpp **** }
 546              		.loc 2 193 77 is_stmt 0
 547              	#APP
 548              	# 193 "src/../h/riscv.hpp" 1
 549              		csrw sstatus, a5
 550              	# 0 "" 2
 551              	.LVL40:
 552              	#NO_APP
 553              	.LBE59:
 554              	.LBE58:
 197:src/riscv.cpp ****     w_sepc(sepc);
 555              		.loc 1 197 5 is_stmt 1
 556              		.loc 1 197 11 is_stmt 0
 557 0248 833784FE 		ld	a5,-24(s0)
 558              	.LVL41:
 559              	.LBB60:
 560              	.LBB61:
 125:src/../h/riscv.hpp **** }
 561              		.loc 2 125 5 is_stmt 1
 125:src/../h/riscv.hpp **** }
 562              		.loc 2 125 65 is_stmt 0
 563              	#APP
 564              	# 125 "src/../h/riscv.hpp" 1
 565              		csrw sepc, a5
 566              	# 0 "" 2
 567              	.LVL42:
 568              	#NO_APP
 569              	.LBE61:
 570              	.LBE60:
 198:src/riscv.cpp **** }
 571              		.loc 1 198 1
 572 0250 03348102 		ld	s0,40(sp)
 573              		.cfi_restore 8
GAS LISTING /tmp/ccbI1DE7.s 			page 20


 574              		.cfi_def_cfa 2, 48
 575 0254 13010103 		addi	sp,sp,48
 576              		.cfi_def_cfa_offset 0
 577 0258 67800000 		jr	ra
 578              		.cfi_endproc
 579              	.LFE23:
 581              		.align	2
 582              		.globl	_ZN5Riscv22handleConsoleInterruptEv
 584              	_ZN5Riscv22handleConsoleInterruptEv:
 585              	.LFB24:
 199:src/riscv.cpp **** 
 200:src/riscv.cpp **** void Riscv::handleConsoleInterrupt() {
 586              		.loc 1 200 38 is_stmt 1
 587              		.cfi_startproc
 588 025c 130101FF 		addi	sp,sp,-16
 589              		.cfi_def_cfa_offset 16
 590 0260 23341100 		sd	ra,8(sp)
 591 0264 23308100 		sd	s0,0(sp)
 592              		.cfi_offset 1, -8
 593              		.cfi_offset 8, -16
 594 0268 13040101 		addi	s0,sp,16
 595              		.cfi_def_cfa 8, 0
 201:src/riscv.cpp ****     console_handler();
 596              		.loc 1 201 5
 597              		.loc 1 201 20 is_stmt 0
 598 026c 97000000 		call	console_handler@plt
 598      E7800000 
 599              	.LVL43:
 202:src/riscv.cpp **** }
 600              		.loc 1 202 1
 601 0274 83308100 		ld	ra,8(sp)
 602              		.cfi_restore 1
 603 0278 03340100 		ld	s0,0(sp)
 604              		.cfi_restore 8
 605              		.cfi_def_cfa 2, 16
 606 027c 13010101 		addi	sp,sp,16
 607              		.cfi_def_cfa_offset 0
 608 0280 67800000 		jr	ra
 609              		.cfi_endproc
 610              	.LFE24:
 612              		.align	2
 613              		.globl	_ZN5Riscv14handleBadCauseEv
 615              	_ZN5Riscv14handleBadCauseEv:
 616              	.LFB25:
 203:src/riscv.cpp **** 
 204:src/riscv.cpp **** void Riscv::handleBadCause() {
 617              		.loc 1 204 30 is_stmt 1
 618              		.cfi_startproc
 619 0284 130101FF 		addi	sp,sp,-16
 620              		.cfi_def_cfa_offset 16
 621 0288 23348100 		sd	s0,8(sp)
 622              		.cfi_offset 8, -8
 623 028c 13040101 		addi	s0,sp,16
 624              		.cfi_def_cfa 8, 0
 205:src/riscv.cpp **** 
 206:src/riscv.cpp **** }...
 625              		.loc 1 206 1 is_stmt 0
GAS LISTING /tmp/ccbI1DE7.s 			page 21


 626 0290 03348100 		ld	s0,8(sp)
 627              		.cfi_restore 8
 628              		.cfi_def_cfa 2, 16
 629 0294 13010101 		addi	sp,sp,16
 630              		.cfi_def_cfa_offset 0
 631 0298 67800000 		jr	ra
 632              		.cfi_endproc
 633              	.LFE25:
 635              	.Letext0:
 636              		.file 3 "src/../h/../lib/hw.h"
 637              		.file 4 "src/../h/kThread.hpp"
 638              		.file 5 "src/../lib/console.h"
 639              		.file 6 "src/../lib/mem.h"
 640              		.file 7 "src/../h/print.hpp"
GAS LISTING /tmp/ccbI1DE7.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccbI1DE7.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccbI1DE7.s:13     .text:0000000000000000 .L0 
     /tmp/ccbI1DE7.s:14     .text:0000000000000000 .L0 
     /tmp/ccbI1DE7.s:15     .text:0000000000000004 .L0 
     /tmp/ccbI1DE7.s:17     .text:0000000000000008 .L0 
     /tmp/ccbI1DE7.s:19     .text:000000000000000c .L0 
     /tmp/ccbI1DE7.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:15     .text:000000000000000c .L0 
     /tmp/ccbI1DE7.s:27     .text:0000000000000010 .L0 
       src/riscv.cpp:16     .text:0000000000000010 .L0 
     /tmp/ccbI1DE7.s:33     .text:0000000000000014 .L0 
     /tmp/ccbI1DE7.s:34     .text:0000000000000018 .L0 
     /tmp/ccbI1DE7.s:35     .text:0000000000000018 .L0 
     /tmp/ccbI1DE7.s:37     .text:000000000000001c .L0 
     /tmp/ccbI1DE7.s:39     .text:0000000000000020 .L0 
     /tmp/ccbI1DE7.s:68     .text:0000000000000020 _ZN5Riscv13handleSyscallEv
     /tmp/ccbI1DE7.s:71     .text:0000000000000020 .L0 
     /tmp/ccbI1DE7.s:72     .text:0000000000000020 .L0 
     /tmp/ccbI1DE7.s:73     .text:0000000000000024 .L0 
     /tmp/ccbI1DE7.s:77     .text:0000000000000030 .L0 
     /tmp/ccbI1DE7.s:78     .text:0000000000000030 .L0 
     /tmp/ccbI1DE7.s:79     .text:0000000000000030 .L0 
     /tmp/ccbI1DE7.s:81     .text:0000000000000034 .L0 
     /tmp/ccbI1DE7.s:83     .text:0000000000000034 .L0 
     /tmp/ccbI1DE7.s:84     .text:0000000000000034 .L0 
       src/riscv.cpp:23     .text:0000000000000034 .L0 
     /tmp/ccbI1DE7.s:91     .text:0000000000000038 .L0 
       src/riscv.cpp:24     .text:0000000000000038 .L0 
     /tmp/ccbI1DE7.s:97     .text:000000000000003c .L0 
       src/riscv.cpp:25     .text:000000000000003c .L0 
     /tmp/ccbI1DE7.s:103    .text:0000000000000040 .L0 
       src/riscv.cpp:26     .text:0000000000000040 .L0 
     /tmp/ccbI1DE7.s:109    .text:0000000000000044 .L0 
       src/riscv.cpp:27     .text:0000000000000044 .L0 
     /tmp/ccbI1DE7.s:119    .text:0000000000000048 .L0 
     /tmp/ccbI1DE7.s:120    .text:0000000000000048 .L0 
     /tmp/ccbI1DE7.s:121    .text:0000000000000048 .L0 
  src/../h/riscv.hpp:107    .text:0000000000000048 .L0 
     /tmp/ccbI1DE7.s:129    .text:0000000000000050 .L0 
     /tmp/ccbI1DE7.s:130    .text:0000000000000050 .L0 
     /tmp/ccbI1DE7.s:136    .text:0000000000000054 .L0 
     /tmp/ccbI1DE7.s:137    .text:0000000000000054 .L0 
     /tmp/ccbI1DE7.s:139    .text:0000000000000058 .L0 
     /tmp/ccbI1DE7.s:142    .text:0000000000000060 .L0 
     /tmp/ccbI1DE7.s:145    .text:0000000000000068 .L0 
     /tmp/ccbI1DE7.s:148    .text:0000000000000070 .L0 
     /tmp/ccbI1DE7.s:152    .text:0000000000000078 .L0 
     /tmp/ccbI1DE7.s:153    .text:0000000000000078 .L0 
     /tmp/ccbI1DE7.s:157    .text:0000000000000088 .L0 
     /tmp/ccbI1DE7.s:158    .text:0000000000000088 .L0 
     /tmp/ccbI1DE7.s:162    .text:0000000000000094 .L0 
     /tmp/ccbI1DE7.s:163    .text:0000000000000094 .L0 
     /tmp/ccbI1DE7.s:167    .text:00000000000000a4 .L0 
     /tmp/ccbI1DE7.s:168    .text:00000000000000a4 .L0 
     /tmp/ccbI1DE7.s:174    .text:00000000000000b4 .L0 
GAS LISTING /tmp/ccbI1DE7.s 			page 23


     /tmp/ccbI1DE7.s:175    .text:00000000000000b4 .L0 
     /tmp/ccbI1DE7.s:176    .text:00000000000000b4 .L0 
  src/../h/riscv.hpp:119    .text:00000000000000b4 .L0 
     /tmp/ccbI1DE7.s:184    .text:00000000000000bc .L0 
     /tmp/ccbI1DE7.s:185    .text:00000000000000bc .L0 
     /tmp/ccbI1DE7.s:189    .text:00000000000000c0 .L0 
     /tmp/ccbI1DE7.s:192    .text:00000000000000c8 .L0 
     /tmp/ccbI1DE7.s:193    .text:00000000000000c8 .L0 
     /tmp/ccbI1DE7.s:197    .text:00000000000000d8 .L0 
     /tmp/ccbI1DE7.s:198    .text:00000000000000d8 .L0 
     /tmp/ccbI1DE7.s:204    .text:00000000000000e8 .L0 
     /tmp/ccbI1DE7.s:205    .text:00000000000000e8 .L0 
     /tmp/ccbI1DE7.s:206    .text:00000000000000e8 .L0 
  src/../h/riscv.hpp:143    .text:00000000000000e8 .L0 
     /tmp/ccbI1DE7.s:214    .text:00000000000000f0 .L0 
     /tmp/ccbI1DE7.s:215    .text:00000000000000f0 .L0 
     /tmp/ccbI1DE7.s:219    .text:00000000000000f4 .L0 
     /tmp/ccbI1DE7.s:222    .text:00000000000000fc .L0 
     /tmp/ccbI1DE7.s:223    .text:00000000000000fc .L0 
     /tmp/ccbI1DE7.s:229    .text:000000000000010c .L0 
     /tmp/ccbI1DE7.s:230    .text:0000000000000110 .L0 
     /tmp/ccbI1DE7.s:231    .text:0000000000000110 .L0 
     /tmp/ccbI1DE7.s:233    .text:0000000000000114 .L0 
     /tmp/ccbI1DE7.s:234    .text:0000000000000114 .L0 
     /tmp/ccbI1DE7.s:236    .text:0000000000000118 .L0 
     /tmp/ccbI1DE7.s:239    .text:000000000000011c .L0 
     /tmp/ccbI1DE7.s:243    .text:0000000000000120 .L0 
     /tmp/ccbI1DE7.s:249    .text:0000000000000120 .L0 
     /tmp/ccbI1DE7.s:250    .text:0000000000000120 .L0 
     /tmp/ccbI1DE7.s:251    .text:0000000000000120 .L0 
  src/../h/riscv.hpp:119    .text:0000000000000120 .L0 
     /tmp/ccbI1DE7.s:259    .text:0000000000000128 .L0 
     /tmp/ccbI1DE7.s:260    .text:0000000000000128 .L0 
     /tmp/ccbI1DE7.s:264    .text:000000000000012c .L0 
     /tmp/ccbI1DE7.s:266    .text:0000000000000130 .L0 
     /tmp/ccbI1DE7.s:270    .text:0000000000000134 .L0 
     /tmp/ccbI1DE7.s:271    .text:0000000000000134 .L0 
     /tmp/ccbI1DE7.s:272    .text:0000000000000134 .L0 
  src/../h/riscv.hpp:187    .text:0000000000000134 .L0 
     /tmp/ccbI1DE7.s:280    .text:000000000000013c .L0 
     /tmp/ccbI1DE7.s:281    .text:000000000000013c .L0 
     /tmp/ccbI1DE7.s:285    .text:0000000000000140 .L0 
     /tmp/ccbI1DE7.s:287    .text:0000000000000144 .L0 
     /tmp/ccbI1DE7.s:288    .text:0000000000000144 .L0 
       src/riscv.cpp:40     .text:0000000000000144 .L0 
     /tmp/ccbI1DE7.s:295    .text:0000000000000148 .L0 
     /tmp/ccbI1DE7.s:296    .text:0000000000000148 .L0 
     /tmp/ccbI1DE7.s:297    .text:0000000000000148 .L0 
     /tmp/ccbI1DE7.s:300    .text:0000000000000148 .L0 
     /tmp/ccbI1DE7.s:309    .text:0000000000000164 .L0 
     /tmp/ccbI1DE7.s:310    .text:0000000000000164 .L0 
       src/riscv.cpp:63     .text:0000000000000164 .L0 
     /tmp/ccbI1DE7.s:317    .text:0000000000000168 .L0 
     /tmp/ccbI1DE7.s:319    .text:0000000000000168 .L0 
     /tmp/ccbI1DE7.s:322    .text:0000000000000170 .L0 
       src/riscv.cpp:66     .text:0000000000000170 .L0 
     /tmp/ccbI1DE7.s:329    .text:0000000000000174 .L0 
GAS LISTING /tmp/ccbI1DE7.s 			page 24


     /tmp/ccbI1DE7.s:334    .text:0000000000000178 .L0 
     /tmp/ccbI1DE7.s:340    .text:0000000000000188 .L0 
     /tmp/ccbI1DE7.s:341    .text:0000000000000188 .L0 
     /tmp/ccbI1DE7.s:342    .text:0000000000000188 .L0 
       src/riscv.cpp:154    .text:0000000000000188 .L0 
     /tmp/ccbI1DE7.s:349    .text:000000000000018c .L0 
     /tmp/ccbI1DE7.s:351    .text:000000000000018c .L0 
     /tmp/ccbI1DE7.s:354    .text:0000000000000190 .L0 
       src/riscv.cpp:156    .text:0000000000000190 .L0 
     /tmp/ccbI1DE7.s:361    .text:0000000000000194 .L0 
     /tmp/ccbI1DE7.s:365    .text:0000000000000198 .L0 
     /tmp/ccbI1DE7.s:366    .text:0000000000000198 .L0 
       src/riscv.cpp:56     .text:0000000000000198 .L0 
     /tmp/ccbI1DE7.s:373    .text:000000000000019c .L0 
     /tmp/ccbI1DE7.s:374    .text:000000000000019c .L0 
     /tmp/ccbI1DE7.s:376    .text:000000000000019c .L0 
     /tmp/ccbI1DE7.s:381    .text:00000000000001a8 .L0 
       src/riscv.cpp:60     .text:00000000000001a8 .L0 
     /tmp/ccbI1DE7.s:392    .text:00000000000001ac .L0 
     /tmp/ccbI1DE7.s:393    .text:00000000000001ac .L0 
       src/riscv.cpp:161    .text:00000000000001ac .L0 
     /tmp/ccbI1DE7.s:399    .text:00000000000001b0 .L0 
     /tmp/ccbI1DE7.s:401    .text:00000000000001b0 .L0 
     /tmp/ccbI1DE7.s:406    .text:00000000000001b4 .L0 
  src/../h/riscv.hpp:193    .text:00000000000001b4 .L0 
     /tmp/ccbI1DE7.s:416    .text:00000000000001b8 .L0 
     /tmp/ccbI1DE7.s:417    .text:00000000000001b8 .L0 
     /tmp/ccbI1DE7.s:422    .text:00000000000001bc .L0 
  src/../h/riscv.hpp:125    .text:00000000000001bc .L0 
     /tmp/ccbI1DE7.s:429    .text:00000000000001c0 .L0 
     /tmp/ccbI1DE7.s:437    .text:00000000000001c4 .L0 
     /tmp/ccbI1DE7.s:438    .text:00000000000001c4 .L0 
     /tmp/ccbI1DE7.s:439    .text:00000000000001c4 .L0 
     /tmp/ccbI1DE7.s:440    .text:00000000000001c4 .L0 
     /tmp/ccbI1DE7.s:443    .text:00000000000001cc .L0 
     /tmp/ccbI1DE7.s:450    .text:00000000000001d0 .L0 
     /tmp/ccbI1DE7.s:451    .text:00000000000001d0 .L0 
     /tmp/ccbI1DE7.s:457    .text:00000000000001e4 .L0 
     /tmp/ccbI1DE7.s:458    .text:00000000000001e4 .L0 
     /tmp/ccbI1DE7.s:464    .text:00000000000001f8 .L0 
     /tmp/ccbI1DE7.s:465    .text:00000000000001f8 .L0 
     /tmp/ccbI1DE7.s:470    .text:000000000000020c .L0 
     /tmp/ccbI1DE7.s:476    .text:000000000000020c _ZN5Riscv20handleTimerInterruptEv
     /tmp/ccbI1DE7.s:479    .text:000000000000020c .L0 
     /tmp/ccbI1DE7.s:480    .text:000000000000020c .L0 
     /tmp/ccbI1DE7.s:481    .text:0000000000000210 .L0 
     /tmp/ccbI1DE7.s:483    .text:0000000000000214 .L0 
     /tmp/ccbI1DE7.s:485    .text:0000000000000218 .L0 
     /tmp/ccbI1DE7.s:490    .text:0000000000000218 .L0 
     /tmp/ccbI1DE7.s:491    .text:0000000000000218 .L0 
     /tmp/ccbI1DE7.s:492    .text:0000000000000218 .L0 
     /tmp/ccbI1DE7.s:504    .text:0000000000000220 .L0 
     /tmp/ccbI1DE7.s:505    .text:0000000000000220 .L0 
     /tmp/ccbI1DE7.s:506    .text:0000000000000220 .L0 
  src/../h/riscv.hpp:119    .text:0000000000000220 .L0 
     /tmp/ccbI1DE7.s:514    .text:0000000000000228 .L0 
     /tmp/ccbI1DE7.s:515    .text:0000000000000228 .L0 
GAS LISTING /tmp/ccbI1DE7.s 			page 25


     /tmp/ccbI1DE7.s:519    .text:000000000000022c .L0 
     /tmp/ccbI1DE7.s:523    .text:0000000000000230 .L0 
     /tmp/ccbI1DE7.s:524    .text:0000000000000230 .L0 
     /tmp/ccbI1DE7.s:525    .text:0000000000000230 .L0 
  src/../h/riscv.hpp:187    .text:0000000000000230 .L0 
     /tmp/ccbI1DE7.s:533    .text:0000000000000238 .L0 
     /tmp/ccbI1DE7.s:534    .text:0000000000000238 .L0 
     /tmp/ccbI1DE7.s:538    .text:000000000000023c .L0 
     /tmp/ccbI1DE7.s:540    .text:0000000000000240 .L0 
     /tmp/ccbI1DE7.s:541    .text:0000000000000240 .L0 
     /tmp/ccbI1DE7.s:546    .text:0000000000000244 .L0 
  src/../h/riscv.hpp:193    .text:0000000000000244 .L0 
     /tmp/ccbI1DE7.s:556    .text:0000000000000248 .L0 
     /tmp/ccbI1DE7.s:557    .text:0000000000000248 .L0 
     /tmp/ccbI1DE7.s:562    .text:000000000000024c .L0 
  src/../h/riscv.hpp:125    .text:000000000000024c .L0 
     /tmp/ccbI1DE7.s:572    .text:0000000000000250 .L0 
     /tmp/ccbI1DE7.s:573    .text:0000000000000254 .L0 
     /tmp/ccbI1DE7.s:574    .text:0000000000000254 .L0 
     /tmp/ccbI1DE7.s:576    .text:0000000000000258 .L0 
     /tmp/ccbI1DE7.s:578    .text:000000000000025c .L0 
     /tmp/ccbI1DE7.s:584    .text:000000000000025c _ZN5Riscv22handleConsoleInterruptEv
     /tmp/ccbI1DE7.s:587    .text:000000000000025c .L0 
     /tmp/ccbI1DE7.s:588    .text:000000000000025c .L0 
     /tmp/ccbI1DE7.s:589    .text:0000000000000260 .L0 
     /tmp/ccbI1DE7.s:592    .text:0000000000000268 .L0 
     /tmp/ccbI1DE7.s:593    .text:0000000000000268 .L0 
     /tmp/ccbI1DE7.s:595    .text:000000000000026c .L0 
     /tmp/ccbI1DE7.s:597    .text:000000000000026c .L0 
     /tmp/ccbI1DE7.s:598    .text:000000000000026c .L0 
     /tmp/ccbI1DE7.s:601    .text:0000000000000274 .L0 
     /tmp/ccbI1DE7.s:602    .text:0000000000000278 .L0 
     /tmp/ccbI1DE7.s:604    .text:000000000000027c .L0 
     /tmp/ccbI1DE7.s:605    .text:000000000000027c .L0 
     /tmp/ccbI1DE7.s:607    .text:0000000000000280 .L0 
     /tmp/ccbI1DE7.s:609    .text:0000000000000284 .L0 
     /tmp/ccbI1DE7.s:615    .text:0000000000000284 _ZN5Riscv14handleBadCauseEv
     /tmp/ccbI1DE7.s:618    .text:0000000000000284 .L0 
     /tmp/ccbI1DE7.s:619    .text:0000000000000284 .L0 
     /tmp/ccbI1DE7.s:620    .text:0000000000000288 .L0 
     /tmp/ccbI1DE7.s:622    .text:000000000000028c .L0 
     /tmp/ccbI1DE7.s:624    .text:0000000000000290 .L0 
     /tmp/ccbI1DE7.s:626    .text:0000000000000290 .L0 
     /tmp/ccbI1DE7.s:627    .text:0000000000000294 .L0 
     /tmp/ccbI1DE7.s:628    .text:0000000000000294 .L0 
     /tmp/ccbI1DE7.s:630    .text:0000000000000298 .L0 
     /tmp/ccbI1DE7.s:632    .text:000000000000029c .L0 
     /tmp/ccbI1DE7.s:641    .text:000000000000029c .L0 
     /tmp/ccbI1DE7.s:53     .rodata.str1.8:0000000000000058 .LC3
     /tmp/ccbI1DE7.s:153    .text:0000000000000078 .L0 
     /tmp/ccbI1DE7.s:56     .rodata.str1.8:0000000000000068 .LC4
     /tmp/ccbI1DE7.s:163    .text:0000000000000094 .L0 
     /tmp/ccbI1DE7.s:59     .rodata.str1.8:0000000000000070 .LC5
     /tmp/ccbI1DE7.s:168    .text:00000000000000a4 .L0 
     /tmp/ccbI1DE7.s:193    .text:00000000000000c8 .L0 
     /tmp/ccbI1DE7.s:62     .rodata.str1.8:0000000000000078 .LC6
     /tmp/ccbI1DE7.s:198    .text:00000000000000d8 .L0 
GAS LISTING /tmp/ccbI1DE7.s 			page 26


     /tmp/ccbI1DE7.s:223    .text:00000000000000fc .L0 
     /tmp/ccbI1DE7.s:44     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccbI1DE7.s:451    .text:00000000000001d0 .L0 
     /tmp/ccbI1DE7.s:47     .rodata.str1.8:0000000000000018 .LC1
     /tmp/ccbI1DE7.s:458    .text:00000000000001e4 .L0 
     /tmp/ccbI1DE7.s:50     .rodata.str1.8:0000000000000038 .LC2
     /tmp/ccbI1DE7.s:465    .text:00000000000001f8 .L0 
     /tmp/ccbI1DE7.s:242    .text:0000000000000120 .L16
     /tmp/ccbI1DE7.s:445    .text:00000000000001d0 .L17
     /tmp/ccbI1DE7.s:455    .text:00000000000001e4 .L18
     /tmp/ccbI1DE7.s:462    .text:00000000000001f8 .L19
     /tmp/ccbI1DE7.s:431    .text:00000000000001c4 .L5
     /tmp/ccbI1DE7.s:331    .text:0000000000000178 .L6
     /tmp/ccbI1DE7.s:363    .text:0000000000000198 .L7
     /tmp/ccbI1DE7.s:389    .text:00000000000001ac .L9
     /tmp/ccbI1DE7.s:226    .text:000000000000010c .L3
     /tmp/ccbI1DE7.s:150    .text:0000000000000078 .L13
     /tmp/ccbI1DE7.s:1808   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccbI1DE7.s:2984   .debug_str:00000000000005be .LASF105
     /tmp/ccbI1DE7.s:2932   .debug_str:0000000000000427 .LASF106
     /tmp/ccbI1DE7.s:3014   .debug_str:0000000000000785 .LASF107
     /tmp/ccbI1DE7.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccbI1DE7.s:635    .text:000000000000029c .Letext0
     /tmp/ccbI1DE7.s:2782   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccbI1DE7.s:2906   .debug_str:0000000000000395 .LASF0
     /tmp/ccbI1DE7.s:2926   .debug_str:00000000000003ec .LASF1
     /tmp/ccbI1DE7.s:2894   .debug_str:0000000000000325 .LASF2
     /tmp/ccbI1DE7.s:2876   .debug_str:00000000000002c8 .LASF4
     /tmp/ccbI1DE7.s:2962   .debug_str:0000000000000519 .LASF3
     /tmp/ccbI1DE7.s:2808   .debug_str:00000000000000b5 .LASF5
     /tmp/ccbI1DE7.s:2930   .debug_str:0000000000000414 .LASF6
     /tmp/ccbI1DE7.s:2904   .debug_str:0000000000000382 .LASF7
     /tmp/ccbI1DE7.s:2992   .debug_str:00000000000006be .LASF8
     /tmp/ccbI1DE7.s:2866   .debug_str:0000000000000275 .LASF9
     /tmp/ccbI1DE7.s:2940   .debug_str:000000000000046e .LASF10
     /tmp/ccbI1DE7.s:2986   .debug_str:0000000000000682 .LASF11
     /tmp/ccbI1DE7.s:2810   .debug_str:00000000000000bc .LASF12
     /tmp/ccbI1DE7.s:2788   .debug_str:0000000000000022 .LASF13
     /tmp/ccbI1DE7.s:2824   .debug_str:0000000000000135 .LASF14
     /tmp/ccbI1DE7.s:2956   .debug_str:00000000000004e5 .LASF15
     /tmp/ccbI1DE7.s:2832   .debug_str:0000000000000167 .LASF16
     /tmp/ccbI1DE7.s:2922   .debug_str:00000000000003db .LASF68
     /tmp/ccbI1DE7.s:2886   .debug_str:00000000000002ee .LASF108
     /tmp/ccbI1DE7.s:2972   .debug_str:0000000000000574 .LASF17
     /tmp/ccbI1DE7.s:2920   .debug_str:00000000000003d2 .LASF18
     /tmp/ccbI1DE7.s:2882   .debug_str:00000000000002dd .LASF19
     /tmp/ccbI1DE7.s:2954   .debug_str:00000000000004da .LASF20
     /tmp/ccbI1DE7.s:3006   .debug_str:000000000000074e .LASF22
     /tmp/ccbI1DE7.s:2804   .debug_str:000000000000009f .LASF21
     /tmp/ccbI1DE7.s:2848   .debug_str:00000000000001fc .LASF23
     /tmp/ccbI1DE7.s:2974   .debug_str:000000000000057d .LASF24
     /tmp/ccbI1DE7.s:2786   .debug_str:0000000000000008 .LASF25
     /tmp/ccbI1DE7.s:2966   .debug_str:0000000000000532 .LASF26
     /tmp/ccbI1DE7.s:2818   .debug_str:0000000000000104 .LASF27
     /tmp/ccbI1DE7.s:2790   .debug_str:0000000000000032 .LASF28
     /tmp/ccbI1DE7.s:2852   .debug_str:000000000000021f .LASF30
     /tmp/ccbI1DE7.s:2844   .debug_str:00000000000001e4 .LASF32
GAS LISTING /tmp/ccbI1DE7.s 			page 27


     /tmp/ccbI1DE7.s:2842   .debug_str:00000000000001cf .LASF34
     /tmp/ccbI1DE7.s:2964   .debug_str:000000000000052b .LASF29
     /tmp/ccbI1DE7.s:2946   .debug_str:00000000000004ac .LASF31
     /tmp/ccbI1DE7.s:2982   .debug_str:00000000000005b7 .LASF33
     /tmp/ccbI1DE7.s:2978   .debug_str:0000000000000592 .LASF35
     /tmp/ccbI1DE7.s:2862   .debug_str:0000000000000267 .LASF36
     /tmp/ccbI1DE7.s:2834   .debug_str:000000000000017d .LASF37
     /tmp/ccbI1DE7.s:2784   .debug_str:0000000000000000 .LASF38
     /tmp/ccbI1DE7.s:2872   .debug_str:000000000000029e .LASF39
     /tmp/ccbI1DE7.s:2806   .debug_str:00000000000000ad .LASF40
     /tmp/ccbI1DE7.s:2816   .debug_str:00000000000000f0 .LASF41
     /tmp/ccbI1DE7.s:3012   .debug_str:000000000000077d .LASF42
     /tmp/ccbI1DE7.s:2854   .debug_str:0000000000000234 .LASF43
     /tmp/ccbI1DE7.s:2908   .debug_str:00000000000003a2 .LASF44
     /tmp/ccbI1DE7.s:3004   .debug_str:000000000000073b .LASF45
     /tmp/ccbI1DE7.s:2802   .debug_str:0000000000000098 .LASF46
     /tmp/ccbI1DE7.s:2860   .debug_str:0000000000000254 .LASF47
     /tmp/ccbI1DE7.s:2864   .debug_str:000000000000026f .LASF48
     /tmp/ccbI1DE7.s:2980   .debug_str:00000000000005a5 .LASF49
     /tmp/ccbI1DE7.s:2800   .debug_str:0000000000000092 .LASF50
     /tmp/ccbI1DE7.s:3016   .debug_str:00000000000007a9 .LASF51
     /tmp/ccbI1DE7.s:3010   .debug_str:0000000000000772 .LASF52
     /tmp/ccbI1DE7.s:2960   .debug_str:0000000000000501 .LASF53
     /tmp/ccbI1DE7.s:2924   .debug_str:00000000000003e1 .LASF54
     /tmp/ccbI1DE7.s:2888   .debug_str:00000000000002f9 .LASF55
     /tmp/ccbI1DE7.s:2822   .debug_str:000000000000012b .LASF56
     /tmp/ccbI1DE7.s:2874   .debug_str:00000000000002b2 .LASF57
     /tmp/ccbI1DE7.s:2898   .debug_str:000000000000033f .LASF58
     /tmp/ccbI1DE7.s:2870   .debug_str:0000000000000288 .LASF59
     /tmp/ccbI1DE7.s:2912   .debug_str:00000000000003b2 .LASF60
     /tmp/ccbI1DE7.s:3000   .debug_str:00000000000006f8 .LASF62
     /tmp/ccbI1DE7.s:2928   .debug_str:00000000000003ff .LASF61
     /tmp/ccbI1DE7.s:2936   .debug_str:0000000000000440 .LASF63
     /tmp/ccbI1DE7.s:2970   .debug_str:000000000000055d .LASF64
     /tmp/ccbI1DE7.s:2798   .debug_str:000000000000006e .LASF65
     /tmp/ccbI1DE7.s:2846   .debug_str:00000000000001ed .LASF66
     /tmp/ccbI1DE7.s:2968   .debug_str:0000000000000541 .LASF67
     /tmp/ccbI1DE7.s:2976   .debug_str:000000000000058a .LASF69
     /tmp/ccbI1DE7.s:2796   .debug_str:0000000000000066 .LASF109
     /tmp/ccbI1DE7.s:2814   .debug_str:00000000000000e7 .LASF70
     /tmp/ccbI1DE7.s:2996   .debug_str:00000000000006da .LASF72
     /tmp/ccbI1DE7.s:2934   .debug_str:0000000000000435 .LASF110
     /tmp/ccbI1DE7.s:2990   .debug_str:00000000000006a3 .LASF111
     /tmp/ccbI1DE7.s:2896   .debug_str:0000000000000333 .LASF71
     /tmp/ccbI1DE7.s:2812   .debug_str:00000000000000cc .LASF73
     /tmp/ccbI1DE7.s:2952   .debug_str:00000000000004cc .LASF74
     /tmp/ccbI1DE7.s:3002   .debug_str:0000000000000713 .LASF75
     /tmp/ccbI1DE7.s:2950   .debug_str:00000000000004c7 .LASF112
     /tmp/ccbI1DE7.s:2958   .debug_str:00000000000004fb .LASF76
     /tmp/ccbI1DE7.s:2792   .debug_str:000000000000003b .LASF77
     /tmp/ccbI1DE7.s:2850   .debug_str:0000000000000217 .LASF113
     /tmp/ccbI1DE7.s:2938   .debug_str:0000000000000462 .LASF78
     /tmp/ccbI1DE7.s:2826   .debug_str:0000000000000141 .LASF79
     /tmp/ccbI1DE7.s:2942   .debug_str:000000000000047d .LASF114
     /tmp/ccbI1DE7.s:2836   .debug_str:0000000000000191 .LASF80
     /tmp/ccbI1DE7.s:2880   .debug_str:00000000000002d8 .LASF81
     /tmp/ccbI1DE7.s:2828   .debug_str:000000000000015c .LASF82
GAS LISTING /tmp/ccbI1DE7.s 			page 28


     /tmp/ccbI1DE7.s:2884   .debug_str:00000000000002e6 .LASF83
     /tmp/ccbI1DE7.s:2878   .debug_str:00000000000002cf .LASF84
     /tmp/ccbI1DE7.s:2998   .debug_str:00000000000006ea .LASF115
     /tmp/ccbI1DE7.s:2902   .debug_str:0000000000000356 .LASF116
     /tmp/ccbI1DE7.s:2892   .debug_str:0000000000000317 .LASF85
     /tmp/ccbI1DE7.s:2944   .debug_str:000000000000048f .LASF86
     /tmp/ccbI1DE7.s:2910   .debug_str:00000000000003a9 .LASF87
     /tmp/ccbI1DE7.s:2794   .debug_str:000000000000004f .LASF88
     /tmp/ccbI1DE7.s:2856   .debug_str:0000000000000248 .LASF89
     /tmp/ccbI1DE7.s:616    .text:0000000000000284 .LFB25
     /tmp/ccbI1DE7.s:633    .text:000000000000029c .LFE25
     /tmp/ccbI1DE7.s:585    .text:000000000000025c .LFB24
     /tmp/ccbI1DE7.s:610    .text:0000000000000284 .LFE24
     /tmp/ccbI1DE7.s:599    .text:0000000000000274 .LVL43
     /tmp/ccbI1DE7.s:477    .text:000000000000020c .LFB23
     /tmp/ccbI1DE7.s:579    .text:000000000000025c .LFE23
     /tmp/ccbI1DE7.s:2916   .debug_str:00000000000003c5 .LASF90
     /tmp/ccbI1DE7.s:2948   .debug_str:00000000000004bf .LASF91
     /tmp/ccbI1DE7.s:488    .text:0000000000000218 .LBB52
     /tmp/ccbI1DE7.s:500    .text:0000000000000220 .LBE52
     /tmp/ccbI1DE7.s:2638   .debug_loc:0000000000000000 .LLST8
     /tmp/ccbI1DE7.s:502    .text:0000000000000220 .LBB54
     /tmp/ccbI1DE7.s:517    .text:000000000000022c .LBE54
     /tmp/ccbI1DE7.s:521    .text:0000000000000230 .LBB56
     /tmp/ccbI1DE7.s:536    .text:000000000000023c .LBE56
     /tmp/ccbI1DE7.s:543    .text:0000000000000244 .LBB58
     /tmp/ccbI1DE7.s:554    .text:0000000000000248 .LBE58
     /tmp/ccbI1DE7.s:2646   .debug_loc:0000000000000024 .LLST9
     /tmp/ccbI1DE7.s:559    .text:000000000000024c .LBB60
     /tmp/ccbI1DE7.s:570    .text:0000000000000250 .LBE60
     /tmp/ccbI1DE7.s:2653   .debug_loc:0000000000000047 .LLST10
     /tmp/ccbI1DE7.s:69     .text:0000000000000020 .LFB22
     /tmp/ccbI1DE7.s:471    .text:000000000000020c .LFE22
     /tmp/ccbI1DE7.s:2858   .debug_str:000000000000024d .LASF92
     /tmp/ccbI1DE7.s:2660   .debug_loc:000000000000006a .LLST0
     /tmp/ccbI1DE7.s:245    .text:0000000000000120 .LBB37
     /tmp/ccbI1DE7.s:448    .text:00000000000001d0 .LBE37
     /tmp/ccbI1DE7.s:2918   .debug_str:00000000000003ca .LASF93
     /tmp/ccbI1DE7.s:2671   .debug_loc:00000000000000a0 .LLST1
     /tmp/ccbI1DE7.s:2830   .debug_str:0000000000000162 .LASF94
     /tmp/ccbI1DE7.s:2690   .debug_loc:00000000000000fc .LLST2
     /tmp/ccbI1DE7.s:2705   .debug_loc:0000000000000136 .LLST3
     /tmp/ccbI1DE7.s:2731   .debug_loc:00000000000001a8 .LLST4
     /tmp/ccbI1DE7.s:2772   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccbI1DE7.s:2914   .debug_str:00000000000003c0 .LASF95
     /tmp/ccbI1DE7.s:2738   .debug_loc:00000000000001cb .LLST5
     /tmp/ccbI1DE7.s:320    .text:0000000000000170 .LVL19
     /tmp/ccbI1DE7.s:379    .text:00000000000001a8 .LVL26
     /tmp/ccbI1DE7.s:441    .text:00000000000001cc .LVL32
     /tmp/ccbI1DE7.s:247    .text:0000000000000120 .LBB38
     /tmp/ccbI1DE7.s:262    .text:000000000000012c .LBE38
     /tmp/ccbI1DE7.s:268    .text:0000000000000134 .LBB40
     /tmp/ccbI1DE7.s:283    .text:0000000000000140 .LBE40
     /tmp/ccbI1DE7.s:403    .text:00000000000001b4 .LBB46
     /tmp/ccbI1DE7.s:414    .text:00000000000001b8 .LBE46
     /tmp/ccbI1DE7.s:2745   .debug_loc:00000000000001ee .LLST6
     /tmp/ccbI1DE7.s:419    .text:00000000000001bc .LBB48
GAS LISTING /tmp/ccbI1DE7.s 			page 29


     /tmp/ccbI1DE7.s:433    .text:00000000000001c4 .LBE48
     /tmp/ccbI1DE7.s:2752   .debug_loc:0000000000000211 .LLST7
     /tmp/ccbI1DE7.s:116    .text:0000000000000048 .LBB30
     /tmp/ccbI1DE7.s:133    .text:0000000000000054 .LBE30
     /tmp/ccbI1DE7.s:172    .text:00000000000000b4 .LBB33
     /tmp/ccbI1DE7.s:187    .text:00000000000000c0 .LBE33
     /tmp/ccbI1DE7.s:202    .text:00000000000000e8 .LBB35
     /tmp/ccbI1DE7.s:217    .text:00000000000000f4 .LBE35
     /tmp/ccbI1DE7.s:155    .text:0000000000000088 .LVL6
     /tmp/ccbI1DE7.s:160    .text:0000000000000094 .LVL7
     /tmp/ccbI1DE7.s:165    .text:00000000000000a4 .LVL8
     /tmp/ccbI1DE7.s:170    .text:00000000000000b4 .LVL9
     /tmp/ccbI1DE7.s:190    .text:00000000000000c8 .LVL10
     /tmp/ccbI1DE7.s:195    .text:00000000000000d8 .LVL11
     /tmp/ccbI1DE7.s:200    .text:00000000000000e8 .LVL12
     /tmp/ccbI1DE7.s:220    .text:00000000000000fc .LVL13
     /tmp/ccbI1DE7.s:225    .text:000000000000010c .LVL14
     /tmp/ccbI1DE7.s:453    .text:00000000000001e0 .LVL34
     /tmp/ccbI1DE7.s:460    .text:00000000000001f4 .LVL35
     /tmp/ccbI1DE7.s:467    .text:0000000000000208 .LVL36
     /tmp/ccbI1DE7.s:10     .text:0000000000000000 .LFB21
     /tmp/ccbI1DE7.s:40     .text:0000000000000020 .LFE21
     /tmp/ccbI1DE7.s:2868   .debug_str:0000000000000283 .LASF96
     /tmp/ccbI1DE7.s:2890   .debug_str:0000000000000311 .LASF97
     /tmp/ccbI1DE7.s:2840   .debug_str:00000000000001bf .LASF98
     /tmp/ccbI1DE7.s:2820   .debug_str:0000000000000120 .LASF99
     /tmp/ccbI1DE7.s:2994   .debug_str:00000000000006ce .LASF100
     /tmp/ccbI1DE7.s:2838   .debug_str:00000000000001ac .LASF101
     /tmp/ccbI1DE7.s:3008   .debug_str:0000000000000766 .LASF102
     /tmp/ccbI1DE7.s:2988   .debug_str:0000000000000691 .LASF103
     /tmp/ccbI1DE7.s:2900   .debug_str:0000000000000349 .LASF104
     /tmp/ccbI1DE7.s:487    .text:0000000000000218 .LVL37
     /tmp/ccbI1DE7.s:497    .text:0000000000000220 .LVL38
     /tmp/ccbI1DE7.s:542    .text:0000000000000244 .LVL39
     /tmp/ccbI1DE7.s:551    .text:0000000000000248 .LVL40
     /tmp/ccbI1DE7.s:558    .text:000000000000024c .LVL41
     /tmp/ccbI1DE7.s:567    .text:0000000000000250 .LVL42
     /tmp/ccbI1DE7.s:131    .text:0000000000000054 .LVL5
     /tmp/ccbI1DE7.s:237    .text:0000000000000118 .LVL15
     /tmp/ccbI1DE7.s:241    .text:0000000000000120 .LVL16
     /tmp/ccbI1DE7.s:293    .text:0000000000000148 .LVL17
     /tmp/ccbI1DE7.s:330    .text:0000000000000178 .LVL20
     /tmp/ccbI1DE7.s:347    .text:000000000000018c .LVL21
     /tmp/ccbI1DE7.s:362    .text:0000000000000198 .LVL23
     /tmp/ccbI1DE7.s:430    .text:00000000000001c4 .LVL31
     /tmp/ccbI1DE7.s:371    .text:000000000000019c .LVL24
     /tmp/ccbI1DE7.s:377    .text:00000000000001a0 .LVL25
     /tmp/ccbI1DE7.s:315    .text:0000000000000168 .LVL18
     /tmp/ccbI1DE7.s:387    .text:00000000000001ac .LVL27
     /tmp/ccbI1DE7.s:444    .text:00000000000001d0 .LVL33
     /tmp/ccbI1DE7.s:402    .text:00000000000001b4 .LVL28
     /tmp/ccbI1DE7.s:411    .text:00000000000001b8 .LVL29
     /tmp/ccbI1DE7.s:418    .text:00000000000001bc .LVL30
     /tmp/ccbI1DE7.s:642    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccbI1DE7.s:307    .text:0000000000000164 .LBB43
     /tmp/ccbI1DE7.s:332    .text:0000000000000178 .LBE43
     /tmp/ccbI1DE7.s:338    .text:0000000000000188 .LBB44
GAS LISTING /tmp/ccbI1DE7.s 			page 30


     /tmp/ccbI1DE7.s:390    .text:00000000000001ac .LBE44
     /tmp/ccbI1DE7.s:435    .text:00000000000001c4 .LBB45
     /tmp/ccbI1DE7.s:446    .text:00000000000001d0 .LBE45

UNDEFINED SYMBOLS
_Z11printStringPKc
_Z12printIntegerm
__mem_free
__mem_alloc
_ZN7kThread5yieldEv
console_handler
